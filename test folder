This is a project from Danny Ma Free MasterClass. This is more a personal project to hone in on what I need work on.

> How many US mentors and non US mentors are there? 

SELECT 
CASE
	WHEN region != 'United States' THEN 'Non-US'
    ELSE region
    END AS mentor_region,
    COUNT(*) AS mentor_count
FROM trading.members
GROUP BY mentor_region
ORDER BY mentor_count DESC;

| mentor_region | mentor_count |
| ------------- | ------------ |
| United States |            7 |
| Non US        |            7 |

> How many mentors have a first name starting with a letter before `'E'`?

SELECT COUNT(first_name)
FROM trading.members
WHERE LEFT(first_name,1) < 'E';

| mentor_count |
| ------------ |
|            6 |

What is the average of the `price` column for Bitcoin records during the year 2020?

SELECT AVG(price)
FROM trading.prices
WHERE ticker = 'BTC' 
      AND market_date BETWEEN '2020-01-01' AND '2020-12-31';
      
|        avg         |
| ------------------ |
| 11111.631147540984 |

> What is the monthly average of the `price` column for Ethereum in 2020? Sort the output in chronological 
order and also round the average price value to 2 decimal places

SELECT 
	DATE_FORMAT(market_date, '%Y-%m-01') AS month_start, <-- look to go over date format for MySQL
    ROUND(AVG(price), 2) AS average_ETH_price
FROM trading.prices
WHERE EXTRACT(YEAR from market_date) = 2020
GROUP BY month_start
ORDER BY month_start;

|      month_start       | average_eth_price |
| ---------------------- | ----------------- |
| 2020-01-01 00:00:00+00 |           4267.73 |
| 2020-02-01 00:00:00+00 |           4937.66 |
| 2020-03-01 00:00:00+00 |           3511.64 |
| 2020-04-01 00:00:00+00 |           3691.16 |
| 2020-05-01 00:00:00+00 |           4730.50 |
| 2020-06-01 00:00:00+00 |           4858.88 |
| 2020-07-01 00:00:00+00 |           4925.83 |
| 2020-08-01 00:00:00+00 |           6020.07 |
| 2020-09-01 00:00:00+00 |           5505.55 |
| 2020-10-01 00:00:00+00 |           6132.07 |
| 2020-11-01 00:00:00+00 |           8573.75 |
| 2020-12-01 00:00:00+00 |          11302.20 |

> Are there any duplicate `market_date` values for any `ticker` value in our table?

SELECT ticker, COUNT(market_date) AS total_count, 
		COUNT(DISTINCT market_date) AS unique_count
FROM trading.prices
GROUP BY ticker;

| ticker | total_count | unique_count |
| ------ | ----------- | ------------ |
| BTC    |        1702 |         1702 |
| ETH    |        1702 |         1702 |

> How many days from the `trading.prices` table exist where the `high` price of Bitcoin is over $30,000?

SELECT ticker, COUNT(market_date)
FROM trading.prices
WHERE ticker = 'BTC' AND high > 30000;

| row_count |
| --------- |
|       240 |

> How many "breakout" days were there in 2020 where the `price` column is greater than the `open` column for each `ticker`?

SELECT ticker, SUM(CASE WHEN price > open THEN 1 ELSE
    0 END) AS breakout_days
FROM trading.prices
WHERE EXTRACT(YEAR from market_date) = 2020
GROUP BY ticker;

| ticker | breakout_days |
| ------ | ------------- |
| BTC    |           207 |
| ETH    |           200 |

> How many "non_breakout" days were there in 2020 where the `price` column is less than the `open` column for each `ticker`?

SELECT ticker, SUM(CASE WHEN price < open THEN 1 ELSE
    0 END) AS breakout_days
FROM trading.prices
WHERE EXTRACT(YEAR from market_date) = 2020
GROUP BY ticker;

| ticker | non_breakout_days |
| ------ | ----------------- |
| BTC    |               159 |
| ETH    |               166 |

> What percentage of days in 2020 were breakout days vs non-breakout days? Round the percentages to 2 decimal places?

SELECT ticker, 
	ROUND(SUM(CASE WHEN price > open THEN 1 ELSE
    0 END) / COUNT(*),2) as breakout_percentage,
    ROUND(SUM(CASE WHEN price < open THEN 1 ELSE
    0 END) / COUNT(*),2) as nonbreakout_percentage
FROM trading.prices
WHERE EXTRACT(YEAR from market_date) = 2020
GROUP BY ticker;

| ticker | breakout_percentage | non_breakout_percentage |
| ------ | ------------------- | ----------------------- |
| BTC    |                0.57 |                    0.43 |
| ETH    |                0.55 |                    0.45 |

> How many buy and sell transactions are there for Bitcoin?

SELECT txn_type, COUNT(*) AS transaction_type
FROM trading.transactions
WHERE ticker = 'BTC'
GROUP BY txn_type;

| txn_type | transaction_count |
| -------- | ----------------- |
| SELL     |              6916 |
| BUY      |              1668 |

> For each year, calculate the following buy and sell metrics for Bitcoin:

SELECT 
	EXTRACT(YEAR from txn_time) AS txn_year,
	txn_type, COUNT(*) AS transaction_count,
    ROUND(SUM(quantity),2) AS total_quantity,
    ROUND(AVG(quantity),2) AS avg_quantity
FROM trading.transactions
GROUP BY txn_year, txn_type
ORDER BY txn_year, txn_type;

| txn_year | txn_type | transaction_count | total_quantity | avg_quantity |
| -------- | -------- | ----------------- | -------------- | ---------------- |
|     2017 | BUY      |              3425 |       21751.61 |             5.35 |
|     2017 | SELL     |               682 |        4321.30 |             5.06 |
|     2018 | BUY      |              3404 |       19922.07 |             4.99 |
|     2018 | SELL     |               689 |        4320.24 |             5.01 |
|     2019 | BUY      |              3387 |       20226.60 |             5.01 |
|     2019 | SELL     |               716 |        4364.99 |             5.03 |
|     2020 | BUY      |              4183 |       21033.04 |             5.03 |
|     2020 | SELL     |               864 |        4328.17 |             5.01 |
|     2021 | BUY      |              2600 |       12916.04 |             4.97 |
|     2021 | SELL     |               589 |        2864.94 |             4.86 |

> What was the monthly total quantity purchased and sold for Ethereum in 2020?

SELECT 
	DATE_FORMAT(txn_time, '%Y-%m-01') AS calendar_month,
    SUM(CASE WHEN txn_type = 'BUY' THEN quantity ELSE 0 END) AS buy_quantity,
    SUM(CASE WHEN txn_type = 'SELL' THEN quantity ELSE 0 END) AS sell_quantity
FROM trading.transactions
WHERE txn_time BETWEEN '2020-01-01' AND '2020-12-31'
GROUP BY calendar_month
ORDER BY calendar_month;

| calendar_month |      buy_quantity      |     sell_quantity     |
| -------------- | ---------------------- | --------------------- |
| 2020-01-01     |  1882.7000203746428756 |  349.3725812083231374 |
| 2020-02-01     |  1531.0106358610396384 |   343.508128084135167 |
| 2020-03-01     |  1693.5669211461637014 |   366.959518007770558 |
| 2020-04-01     |  1725.6283079850810635 | 422.64234679504139508 |
| 2020-05-01     |  1761.6881436085408473 |   350.467297223666174 |
| 2020-06-01     |  1682.2821732162153014 |   387.638801697624787 |
| 2020-07-01     |  1887.2312255768009478 |  271.0746272089570493 |
| 2020-08-01     |  1817.6817037570679820 |   413.445389944001820 |
| 2020-09-01     |  1800.5229161796472593 |  313.5526304372053382 |
| 2020-10-01     | 1849.56943373260492995 |  371.8053457181736909 |
| 2020-11-01     |  1698.4066050651242784 |   347.540073846350298 |
| 2020-12-01     |  1702.7471083560609640 |  390.1583195136288607 |

> Summarise all buy and sell transactions for each `member_id` by generating 1 row for each member with the following additional columns:

SELECT member_id,
	SUM(CASE WHEN ticker = 'BTC' AND txn_type = 'BUY' THEN quantity ELSE 0 END) AS btc_buy_qty,
    SUM(CASE WHEN ticker = 'BTC' AND txn_type = 'SELL' THEN quantity ELSE 0 END) AS btc_sell_qty,
    SUM(CASE WHEN ticker = 'ETH' AND txn_type = 'BUY' THEN quantity ELSE 0 END) AS eth_buy_qty,
    SUM(CASE WHEN ticker = 'ETH' AND txn_type = 'SELL' THEN quantity ELSE 0 END) AS eth_sell_qty
FROM trading.transactions
GROUP BY member_id;

| member_id |       btc_buy_qty       |     btc_sell_qty      |      eth_buy_qty       |     eth_sell_qty      |
| --------- | ----------------------- | --------------------- | ---------------------- | --------------------- |
| d3d944    |   4270.8573823425313401 | 735.87222217343213249 | 1744.65425673609669642 | 735.87222217343213249 |
| c20ad4    |  4975.75064119164404784 |  929.6597445190769838 |  2187.1154401373141792 |  929.6597445190769838 |
| c9f0f8    |   4572.8800842388871361 |  852.3638794847991004 |  2343.4690790139731866 |  852.3638794847991004 |
| eccbc8    |  2844.65155099725936589 |   305.345489355233177 |   2573.754757641582429 |   305.345489355233177 |
| 167909    |  4448.23880624893711454 |  503.0407229884321422 |  1119.7353314008790779 |  503.0407229884321422 |
| c81e72    |   2600.9308762349498788 | 974.09502352354264169 | 4852.52157101720575379 | 974.09502352354264169 |
| e4da3b    |   3567.3882471515063849 | 998.37853535959315513 |  2053.9833252960165058 | 998.37853535959315513 |
| c51ce4    |   2580.4064599247725600 | 1028.7200828179673870 |  2394.7300314796354124 | 1028.7200828179673870 |
| a87ff6    | 5023.705687783492459935 |  863.4858182768507102 |  3822.0371970017654265 |  863.4858182768507102 |
| 8f14e4    |   2647.0768334782105019 |   445.743862547520261 | 3233.47685039578173973 |   445.743862547520261 |
| 45c48c    |   3814.2424689381731354 |   198.131022250011036 | 4442.13685422790551869 |   198.131022250011036 |
| c4ca42    |   4380.4429315724604872 | 1075.5626055691556454 |  4516.5972484100717280 | 1075.5626055691556454 |
| 6512bd    |   4031.6925788360780822 | 574.78279876648434158 |  2941.2223099752008596 | 574.78279876648434158 |
| aab323    |   3491.8873912094965336 |  916.3032786678013621 | 4373.76210149024236043 |  916.3032786678013621 |

> What was the final quantity holding of Bitcoin for each member? Sort the output from the highest BTC holding to lowest

SELECT member_id,
	SUM(CASE WHEN txn_type = 'BUY' THEN quantity
    	WHEN txn_type = 'SELL' THEN -quantity 
        ELSE 0 END) AS final_btc_holding
FROM trading.transactions  
GROUP BY member_id
ORDER BY final_btc_holding DESC;

| member_id |    final_btc_holding    |
| --------- | ----------------------- |
| a87ff6    | 4160.219869506641749735 |
| c20ad4    |  4046.09089667256706404 |
| 167909    |  3945.19808326050497234 |
| c9f0f8    |   3720.5162047540880357 |
| 45c48c    |   3616.1114466881620994 |
| d3d944    |  3534.98516016909920761 |
| 6512bd    |  3456.90978006959374062 |
| c4ca42    |   3304.8803260033048418 |
| aab323    |   2575.5841125416951715 |
| e4da3b    |  2569.00971179191322977 |
| eccbc8    |  2539.30606164202618889 |
| 8f14e4    |   2201.3329709306902409 |
| c81e72    |  1626.83585271140723711 |
| c51ce4    |   1551.6863771068051730 |

> Which members have sold less than 500 Bitcoin? Sort the output from the most BTC sold to least 

SELECT * FROM
	(SELECT member_id, SUM(quantity) AS btc_sold_quantity
     FROM trading.transactions
     WHERE ticker = 'BTC' AND txn_type = 'SELL'
     GROUP BY member_id) AS subquery
WHERE btc_sold_quantity < 500
ORDER BY btc_sold_quantity DESC;

| member_id |  btc_sold_quantity  |
| --------- | ------------------- |
| 8f14e4    | 445.743862547520261 |
| eccbc8    | 305.345489355233177 |
| 45c48c    | 198.131022250011036 |

> Which `member_id` has the highest buy to sell ratio by quantity?

SELECT member_id,
	SUM(CASE WHEN txn_type = 'BUY' THEN quantity ELSE 0 END) /
        SUM(CASE WHEN txn_type = 'SELL' THEN quantity ELSE 0 END) AS buy_to_sell_ratio
FROM trading.transactions
GROUP BY member_id
ORDER BY buy_to_sell_ratio DESC;

| member_id |  buy_to_sell_ratio   |
| --------- | -------------------- |
| 45c48c    | 19.91269871111331881 |
| a87ff6    | 7.486010484765204502 |
| c9f0f8    |   6.2499141870956191 |
| 8f14e4    |  5.30005322455443465 |
| eccbc8    |  4.92850232946761881 |
| c20ad4    |  4.65209743522270350 |
| 167909    |  4.60147388258864127 |
| aab323    |  4.55272149176427243 |
| 6512bd    |  4.52509140656952666 |
| c81e72    |  4.37533523692905634 |
| c4ca42    |   4.2628218979753569 |
| e4da3b    |  3.55762611425005570 |
| d3d944    |  3.35445896964968774 |
| c51ce4    |   2.3630130420937542 |

> For each `member_id` - which month had the highest total Ethereum quantity sold`?

*/SELECT member_id,
		DATE_FORMAT(txn_time, '%Y-%m-01') AS month,
        SUM(CASE WHEN ticker = 'ETH' AND txn_type = 'SELL' THEN quantity ELSE 0 END) AS total_eth_sold
FROM trading.transactions
GROUP BY member_id, month
ORDER BY total_eth_sold DESC;*/

WITH cte_ranked AS (
  SELECT member_id, DATE_FORMAT(txn_time, '%Y-%m-01') AS month,
  		SUM(quantity) AS sold_eth,
  		RANK() OVER(PARTITION BY member_id ORDER BY SUM(quantity) [DESC]) AS month_rank
  FROM trading.transactions
  WHERE ticker = 'ETH' AND txn_type = 'SELL'
  GROUP BY member_id, month
  )
  SELECT member_id, month, sold_eth
  FROM cte_ranked
  WHERE month_rank = 1
  ORDER BY sold_eth DESC;
 
| member_id | calendar_month |  sold_eth_quantity  |
| --------- | -------------- | ------------------- |
| c51ce4    | 2017-05-01     |  66.092440429535028 |
| d3d944    | 2020-04-01     |  60.417369973983352 |
| 6512bd    | 2018-05-01     |   47.93285714951591 |
| 167909    | 2020-12-01     |   45.92423664055218 |
| c81e72    | 2018-08-01     |   41.26728177476413 |
| aab323    | 2018-09-01     | 41.1750763370983665 |
| c4ca42    | 2021-04-01     |  40.113474724022574 |
| c20ad4    | 2017-12-01     |   37.71908498970638 |
| eccbc8    | 2021-03-01     |  36.485934922948275 |
| 8f14e4    | 2017-07-01     |   36.17383743681231 |
| e4da3b    | 2019-01-01     |   30.48442641077632 |
| a87ff6    | 2020-07-01     |   27.28919836842423 |
| 45c48c    | 2020-01-01     |   20.21523406425370 |
| c9f0f8    | 2020-11-01     |  15.931855129247867 |


























